name: Deploy Nop Artifacts

on:
  # push:
  #   branches: ['master']
  # 启用手工触发
  # https://dev.to/this-is-learning/manually-trigger-a-github-action-with-workflowdispatch-3mga
  workflow_dispatch:
  schedule:
    # Note：此为 UTC 时间，最终的执行时间需加上时区
    - cron: '0 18 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - name: Checkout Nop source code
        uses: actions/checkout@v4
        with:
          repository: entropy-cloud/nop-entropy
          path: code

      # 克隆当前仓库到 dist 目录，以便于收集发布产物并提交至 dist 分支
      - name: Checkout artifact repository
        uses: actions/checkout@v4
        with:
          repository: '${{ github.repository }}'
          path: dist

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Check whether new commit exists
        working-directory: code
        run: |
          NOP_DIST_DIR="${GITHUB_WORKSPACE}/dist"
          NOP_BUILD_LOG_FILE="${NOP_DIST_DIR}/USAGE.md"
          NOP_LATEST_COMMIT="$(git log --format="%H" -n 1)"

          echo "${NOP_LATEST_COMMIT} ${NOP_BUILD_LOG_FILE}"
          grep ${NOP_LATEST_COMMIT} ${NOP_BUILD_LOG_FILE} 2>&1 || echo ""
          # 若是没有最新的提交，则无需构建
          if [ -n "$(grep ${NOP_LATEST_COMMIT} ${NOP_BUILD_LOG_FILE})" ]; then
            echo "Ignore the building for commit ${NOP_LATEST_COMMIT}"
            echo "NOP_IGNORE_BUILDING=true" >> ${GITHUB_ENV}
          else
            echo "Start the building for commit ${NOP_LATEST_COMMIT}"
            echo "NOP_IGNORE_BUILDING=false" >> ${GITHUB_ENV}
          fi

      - name: Build packages
        if: ${{ env.NOP_IGNORE_BUILDING == 'false' }}
        working-directory: code
        run: |
          NOP_DIST_DIR="${GITHUB_WORKSPACE}/dist"
          NOP_BUILD_LOG_FILE="${NOP_DIST_DIR}/USAGE.md"
          NOP_LATEST_COMMIT="$(git log --format="%H" -n 1)"
          NOP_BUILD_AT="$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S %:z')"

          echo "Whether ignore building: ${{ env.NOP_IGNORE_BUILDING }}"

          echo "$(date +%s)" > build_timestamp
          rm -rf ${NOP_DIST_DIR}/io/github/entropy-cloud || echo "Ignore"

          # 收集不需要部署发布包的模块：以 mvn --projects '!webapp' 形式排除指定模块
          # https://blog.jdriven.com/2022/11/mastering-maven-exclude-modules-from-build/
          IGNORE_MODULES="$(
            grep -rl --include=pom.xml \
              '<maven.deploy.skip>true</maven.deploy.skip>' . \
            | sed 's|^\./||g; s|/pom.xml$||g; s|^|!|g' \
            | tr '\n' ',' \
            && find . -type d \( -name '*-demo' -o -name '*-demo2' \) \
            | sed '/\/src\//d; /\/target\//d; s|^\./||g; s|^|!|g' \
            | tr '\n' ','
          )"

          # 部署构建产物到本地指定目录
          # https://dzone.com/articles/using-github-as-maven-repository
          # https://stackoverflow.com/questions/12435283/adding-a-maven-distribution-repository-on-the-command-line#answer-39439854
          mvn -B \
            -DaltDeploymentRepository=internal::default::file://${NOP_DIST_DIR} \
            -DskipTests \
            -Dquarkus.package.type=uber-jar \
            --projects="${IGNORE_MODULES}!tests,!nop-all-for-spring,!nop-demo/nop-spring-demo-no-orm" \
            --file pom.xml \
            clean deploy

          NOP_VERSION="$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
          NOP_CLI_JAR_PATH="$(cd ${NOP_DIST_DIR} && find io/github/entropy-cloud/nop-cli -name 'nop-cli-*.jar')"
          NOP_CLI_JAR_NAME="$(basename ${NOP_CLI_JAR_PATH})"

          sed "s|%build_at%|${NOP_BUILD_AT}|g" -i ${NOP_BUILD_LOG_FILE}
          sed "s|%version%|${NOP_VERSION}|g" -i ${NOP_BUILD_LOG_FILE}
          sed "s|%latest_commit%|${NOP_LATEST_COMMIT}|g" -i ${NOP_BUILD_LOG_FILE}
          sed "s|%cli_jar_path%|${NOP_CLI_JAR_PATH}|g" -i ${NOP_BUILD_LOG_FILE}
          sed "s|%cli_jar_name%|${NOP_CLI_JAR_NAME}|g" -i ${NOP_BUILD_LOG_FILE}

      - name: Build IDEA plugin
        if: ${{ env.NOP_IGNORE_BUILDING == 'false' }}
        working-directory: code/nop-idea-plugin
        run: |
          NOP_DIST_DIR="${GITHUB_WORKSPACE}/dist"
          NOP_BUILD_LOG_FILE="${NOP_DIST_DIR}/USAGE.md"

          rm -f ${NOP_DIST_DIR}/nop-idea-plugin-*.zip

          bash ./gradlew buildPlugin

          NOP_IDEA_PLUGIN_NAME="$(basename `ls build/distributions/nop-idea-plugin-*.zip`)"

          cp build/distributions/${NOP_IDEA_PLUGIN_NAME} ${NOP_DIST_DIR}/

          NOP_BUILD_AT="$(cat ../build_timestamp)"
          NOP_BUILD_END="$(date +%s)"
          NOP_BUILD_PERIOD="$(echo "scale=2; ($NOP_BUILD_END - $NOP_BUILD_AT) / 60" | bc)"

          sed "s|%build_period%|${NOP_BUILD_PERIOD}|g" -i ${NOP_BUILD_LOG_FILE}
          sed "s|%idea_plugin_name%|${NOP_IDEA_PLUGIN_NAME}|g" -i ${NOP_BUILD_LOG_FILE}

      - name: Commit artifacts
        if: ${{ env.NOP_IGNORE_BUILDING == 'false' }}
        working-directory: dist
        # Note：推送至当前仓库，需在仓库配置中启用 Action 的写权限
        run: |
          git config user.name "$(git log --format='%an' HEAD^!)"
          git config user.email "$(git log --format='%ae' HEAD^!)"

          git branch -D dist || echo "Ignore"
          git checkout -B dist
          git add .
          git commit -m "Update artifacts"
          git push origin dist -f
